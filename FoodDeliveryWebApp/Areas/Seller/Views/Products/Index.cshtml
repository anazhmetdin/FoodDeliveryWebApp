@model IEnumerable<FoodDeliveryWebApp.Models.Product>
@using Microsoft.AspNetCore.Http.Extensions;
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form method="get">
    <select class="form-control" asp-items="@ViewBag.CategoryList" name="category">
        <option disabled="disabled" selected="selected">Select Category</option>
        <option value="0">All</option>
    </select>
    
    <label for="hasSale">Sale</label>
    <select class="form-control" asp-items="@ViewBag.hasSale" name="hasSale" id="hasSale">
        <option disabled="disabled" selected="selected">Select value</option>
    </select>

    <input type="submit" value="Filter" asp-action="Index"
           class="btn btn-primary" />
</form>

<a asp-action="Index">Reset Filters</a>

<form method="post">

    <div class="form-group">
        <div>
            <input type="range" min="0" max="100" value="0" name="sale"
                   oninput="this.nextElementSibling.value = this.value"/>
            <output>0</output>
            <input type="submit" value="Apply Sale" asp-action="ApplySale"
                   class="btn btn-primary" />

            <input type="submit" value="Restocked" asp-action="Restock"
                   class="btn btn-primary" />
            <input type="submit" value="Out of Stock" asp-action="Destock"
                   class="btn btn-primary" />
        </div>
    </div>
    @Html.Hidden("returnUrl",Context.Request.GetEncodedPathAndQuery())

<table class="table">
    <thead>
        <tr>
            <th>
                <input id="all" type="checkbox" class="form-check-input"/>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InStock)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Category)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Seller)
            </th>
            <th></th>*@
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <input type="checkbox" name="selected" value="@item.Id"
                    class="form-check-input"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
                <partial name="_ProductPrice" model="item"/>
            <td>
                @Html.DisplayFor(modelItem => item.InStock)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>*@
            <td>
                <img id="productImg" alt="productImg" class="img-thumbnail" src="data:image/*;base64,@(Convert.ToBase64String(item.Image))" />
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Seller.Id)
            </td>*@
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

</form>

@section Scripts
    {
    <script>
        document.getElementById("all").onchange = () => {
            const ref = document.getElementById("all").checked;

            document.querySelectorAll(".form-check-input").forEach((item)=>{
                item.checked = ref;
            })
        }
    </script>
}